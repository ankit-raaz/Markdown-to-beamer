library(ecospace)
?ecospace
?KWTraits
sum(char.state)
library(ecospace)
library(vegan)
library(tidyverse)
library(FD, quietly = TRUE)
library(randomForest)
library(rpart)
library(rfUtilities)
data("KWTraits")
nchar<-18
char.state<-c(2,7,3,3,2,2,5,5,2,5,2,2,5,2,5,5,3,3)
sum(char.state)
char.type<-c("numeric", "ord.num", "numeric", "numeric", "numeric", "numeric",
"ord.num", "ord.num", "numeric", "ord.num", "numeric", "numeric", "ord.num",
"numeric", "ord.num", "numeric", "numeric", "numeric")
sum(char.type)
length(char.type)
length(state.names)
state.names <- c("SEXL", "ASEX", "BVOL", "BIOT", "LITH", "FLUD", "HARD", "SOFT",
"INSB", "SPRT", "SSUP", "ATTD", "FRLV", "MOBL", "ABST", "AABS", "IABS", "RLST",
"AREL", "IREL", "FAAB", "FIAB", "FAST", "FARL", "FIRL", "FRST", "AMBT", "FILT",
"ATTF", "MASS", "RAPT", "AUTO", "MICR", "CARN", "INCP", "PART", "BULK")
length(state.names)
# packageVersion("ecospace")
# citation("ecospace")
# news(package = "ecospace")
# vignette("ecospace")
library("ecospace")
nchar<- 15
char.state = rep(3,nchar)
ecospace<- create_ecospace(nchar = nchar, char.state = rep(3,nchar), char.type = rep(c("factor","ord.fac","ord.num"),nchar/3))
x<- neutral(Sseed=5,Smax = 20, ecospace = ecospace)
head(x,10)
metrics<- calc_metrics(samples=x,Smax = 20, Model = "Neutral", Param = "NA")
# packageVersion("ecospace")
# citation("ecospace")
# news(package = "ecospace")
# vignette("ecospace")
install.packages(hclust)
?hclust()
?isoMDS()
y<-c(1.7, "a")
class(y)
y<-c(T, 2)
class(y)
y
y
y<-c(T, 2)
y<-c(True, 2)
class(y)
y
y<-c(1.7, "a")
class(y)
y
x<-c("a","b","C")
as.numeric(x)
x
as.numeric(x)
x
x<-1
x
attributes(x)
x<-c("a","b","C")
attributes(x)
# Creating a vector
# x< -c("female", "male", "male", "female")
x<- c("female", "male", "male","female")
attributes(x)
#List can can all kinds of R objects
test<-c("music tracks", 100,5)
tets
test
vector accepts objects of same types
# now its a vector
# vector accepts objects of same types
test<-list("music tracks", 100, 5)
test
test
is.list(test)
# now its a vector
# vector accepts objects of same types
test<-list("music tracks", 100, 5)
name(test)<-c("product","count", "rating")
names(test)<-c("product","count", "rating")
test
test[1]
test[[1]]
test[[3]]
prod.category<-list(product="music tracks",count=100,rating=5 )
prod.category
str(prod.category)
similar.prod<-list(product="film",count=50, ratings=4)
prod.category<-list(product="music tracks",count=100,rating=5, similar )
similar.prod<-list(product="film",count=50, ratings=4)
prod.category<-list(product="music tracks",count=100,rating=5, similar )
prod.category<-list(product="music tracks",count=100,rating=5, similar.prod )
similar.prod<-list(product="film",count=50, ratings=4)
prod.category<-list(product="music tracks",count=100,rating=5, similar.prod )
prod.category[[4]]
prod.category[2]
prod.category[1]
prod.category[["product"]]
#matrix
matrix<-(1:6,nrow=2)
#matrix
matrix(1:6,nrow=2)
matrix(1:6,ncol=3)
matrix(1:6,ncol=2)
n<- matrix(1:6, nrow=2,byrow=T)
n
#matrix
matrix(1:6,nrow=2)
matrix(1:6,ncol=2)
n<- matrix(1:6, nrow=2,byrow=T)
n
matrix(1:3,nrow=2, ncol=3)
cbind(1:3,1:3)
rbind(1:3,1:3)
n<- matrix(1:6, nrow=2,byrow=T)
rbind(n,7:9)
cbind(n,11:13)
cbind(n,11:12)
n<- matrix(1:6, nrow=2,byrow=T)
n<- matrix(1:6, nrow=2,byrow=T)
n
rbind(n,7:9) #add values as a row
cbind(n,11:12)#add values as a column
n<- matrix(1:6, nrow=2,byrow=T)
n
n<- matrix(1:6, nrow=2,byrow=T)
rownames(n)<-c("row1","row2")
colnames(n)<-c("col1","col2", "col3")
n
#dimnames
n<- matrix(1:6, nrow=2,byrow=T)
n
dimnames=list(c("row1","row2"),c("clo1","col2","col3"))
n
dimnames
x<-matrix(1:8,ncol=2)
x
l<-matrix(LETTERS[1:6],nrow=4, ncol=3)
l
cbind(x,l)
#dataframe
?data.frame()
rm(list=ls())		# Remove saved variables
# Load input data sets:
load("tree.input.100")
name<- c("John","peter","Patrick","Julie","bob")
name
class(name)
age<-c(28,30,31,38,35)
children<-c(F,T,T,F,F)
df<-data.frame(name,age,children)
df
df<-data.frame(Name=name, Age=age, Children=Children)
df<-data.frame(Name=name, Age=age,Children=Children)
df<-data.frame(Name=name, Age=age,Children=children)
df
str(df)
df<-data.frame(name,age,children, stringsAsFactors = F)
df
str(df)
df[2]
df[[2]]
df[3,2]
df[2,3]
df[1,3]
df[1,1]
df[3,2]
df[2,2]
df[1,2]
df[2,1]
df["age"]
df[c(3,5),c("age","children")]
df[2]
df$age
df[["age"]]
df[2]
height<-c(163,177,163,162,157)
df$height<- height
df
weight<-c(75,65,54,78)
df$weight<-weight
df
weight<-c(75,65,54,34,78)
df$weight<-weight
df
tom<- data.frame("Tom",36,F,183,89)
rbind(df,tom)
tom<- data.frame("Tom",36,F,183,89)
rbind(df,tom )
sort(df$age)
ranks<-order(df$age)
ranks
df[ranks,]
df[order(df$age,decreasing = T)]
df
df[order(df$age,decreasing = T),]
df
#vector
vector1<-c(10,20,30)
class(vector)
#all  the values in the vector shoould be of same type
even_value<- seq(2,20,2)
even_value
vec10<- seq(21,2,10)
vec10<- seq(from=21,by=2,length.out10)
vec10<- seq(from=21,by=2,length.out=10)
vec10
library(ecospace)
library(vegan)
library(tidyverse)
library(tidyverse)
library(rlang)
detach("package:rlang", unload = TRUE)
library(rlang)
detach("package:rlang", unload = TRUE)
install.packages(c("readxl", "reprex", "rmarkdown", "tinytex"))
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
# install.packages("tidyverse")
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
install.packages("devtools")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("rmarkdown")
getwd()
setwd("~/Desktop/Paleobiology lab/Codes")
getwd()
install.packages('tinytex')
tinytex::install_tinytex()
# Statstical Metrics used
- Functional Richness (FRic)- Volume of the functional space occupied by the community.
# Statstical Metrics used
- Life habit richness (H)- Number of unique trait combinations.
setwd("~/Desktop/Paleobiology lab/Codes/Ecospace beamer")
# Potential Mechanism: Expansion
![Character Displacement](character displacement.png)
# Potential Mechanism: Expansion
![Divergence](divergence.png)
